{
  "openapi": "3.0.0",
  "info": {
    "title": "Recipe API",
    "version": "1.0.0",
    "description": "API pentru gestionarea rețetelor culinare"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "paths": {
  "/api/recipes/{id}": {
    "get": {
      "summary": "Preia o rețetă după ID",
      "description": "Returnează detaliile unei rețete specifice, pe baza ID-ului.",
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": { "type": "integer" },
          "description": "ID-ul rețetei"
        }
      ],
      "responses": {
        "200": {
          "description": "Detaliile rețetei",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "image": { "type": "string" },
                  "ingredients": { "type": "string" },
                  "instructions": { "type": "string" },
                  "prepTime": { "type": "integer" },
                  "cookTime": { "type": "integer" },
                  "servings": { "type": "integer" },
                  "recipeType": { "type": "string" },
                  "cuisine": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "name": { "type": "string" },
                      "description": { "type": "string" },
                      "image": { "type": "string" }
                    }
                  },
                  "source": { "type": "string" },
                  "userId": { "type": "integer", "nullable": true },
                  "createdAt": { "type": "string", "format": "date-time" },
                  "updatedAt": { "type": "string", "format": "date-time" }
                }
              }
            }
          }
        },
        "404": { "description": "Rețetă negăsită" },
        "500": { "description": "Eroare server" }
      }
    }
  },

    "/api/recipes": {
      "get": {
        "summary": "Preia toate rețetele",
        "description": "Preia lista tuturor rețetelor din baza de date",
        "responses": {
          "200": {
            "description": "Lista tuturor rețetelor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/recipes/type/{type}": {
      "get": {
        "summary": "Preia rețetele după tip",
        "description": "Filtrarea rețetelor după tipul lor (mic-dejun, prânz, etc.)",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Tipul rețetei (ex: mic-dejun, prânz, etc.)"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista rețetelor după tip",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/recipes/cuisines": {
  "get": {
    "summary": "Preia toate bucătăriile",
    "description": "Preia lista tuturor bucătăriilor din baza de date",
    "responses": {
      "200": {
        "description": "Lista tuturor bucătăriilor",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Italian"
                  },
                  "description": {
                    "type": "string",
                    "example": "Traditional Italian cuisine with rich flavors."
                  },
                  "image": {
                    "type": "string",
                    "format": "url",
                    "example": "http://localhost:5000/images/italian.jpg"
                  }
                },
                "required": ["id", "name", "description", "image"]
              }
            }
          }
        }
      }
    }
  }
},
    "/api/recipes/cuisine/{cuisine}": {
  "get": {
    "summary": "Preia rețetele după bucătărie",
    "description": "Filtrarea rețetelor în funcție de tipul de bucătărie",
    "parameters": [
      {
        "in": "path",
        "name": "cuisine",
        "required": true,
        "schema": { "type": "string" },
        "description": "Tipul bucătăriei (ex: romanian, italian, american)"
      }
    ],
    "responses": {
      "200": {
        "description": "Lista rețetelor după tipul de bucătărie",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "image": { "type": "string" },
                  "ingredients": { "type": "string" },
                  "instructions": { "type": "string" },
                  "prepTime": { "type": "integer" },
                  "cookTime": { "type": "integer" },
                  "servings": { "type": "integer" },
                  "recipeType": { "type": "string" },
                  "cuisine": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "name": { "type": "string" },
                      "description": { "type": "string" },
                      "image": { "type": "string" }
                    }
                  },
                  "source": { "type": "string" },
                  "userId": { "type": "integer", "nullable": true },
                  "createdAt": { "type": "string", "format": "date-time" },
                  "updatedAt": { "type": "string", "format": "date-time" }
                }
              }
            }
          }
        }
      }
    }
  }
},
    "/api/users/register": {
      "post": {
        "summary": "Înregistrează un utilizator nou",
        "description": "Permite crearea unui nou utilizator. Returnează un token JWT.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email-ul utilizatorului"
                  },
                  "username": {
                    "type": "string",
                    "description": "Numele de utilizator"
                  },
                  "password": {
                    "type": "string",
                    "description": "Parola utilizatorului"
                  }
                },
                "required": ["email", "username", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Utilizator înregistrat cu succes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Token-ul JWT al utilizatorului"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Date incorecte sau lipsește un câmp necesar"
          },
          "500": {
            "description": "Eroare server"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "Autentificare utilizator",
        "description": "Permite autentificarea unui utilizator și returnează un token JWT.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email-ul utilizatorului"
                  },
                  "password": {
                    "type": "string",
                    "description": "Parola utilizatorului"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Autentificare cu succes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Token-ul JWT al utilizatorului"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Credentiale invalide"
          },
          "500": {
            "description": "Eroare server"
          }
        }
      }
    },
    "/api/users/auth/google/callback": {
  "post": {
    "summary": "Autentificare cu Google",
    "description": "Primește tokenul de la Google și returnează un JWT pentru aplicație.",
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "Tokenul ID primit de la Google"
              }
            },
            "required": ["token"]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Autentificare reușită",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "token": { "type": "string" },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "username": { "type": "string" },
                    "email": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Token lipsă sau invalid"
      },
      "500": {
        "description": "Eroare server"
      }
    }
  }
},"/api/recipes/search-image/{recipeName}/{cuisineName}": {
      "get": {
        "summary": "Search image for recipe and cuisine",
        "parameters": [
          {
            "name": "recipeName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Name of the recipe"
          },
          {
            "name": "cuisineName",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Name of the cuisine"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns image URL for the recipe",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image": { "type": "string", "format": "uri" }
                  }
                },
                "examples": {
                  "placeholder": {
                    "summary": "Example response",
                    "value": {
                      "image": "https://via.placeholder.com/400x300/f0f0f0/666666?text=Example"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Endpoint not found"
          }
        }
      }
    }

  }
}
